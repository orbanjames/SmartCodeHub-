{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\src\\\\components\\\\SnippetList.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n// import React, { useState, useEffect } from \"react\";\n// import \"../Api\";\n// import axios from \"axios\";\n// import \"../styles.css\";\n\n// const SnippetListPage = () => {\n//   const [snippets, setSnippets] = useState([]);\n//   const [newSnippet, setNewSnippet] = useState({\n//     title: \"\",\n//     code: \"\",\n//     description: \"\",\n//     language: \"\",\n//     tags: [],\n//   });\n\n//   // Fetch all snippets from the backend\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:8000/api/snippets/\")\n//       .then((response) => setSnippets(response.data))\n//       .catch((error) => console.error(\"Error fetching snippets:\", error));\n//   }, []);\n\n//   // Handle create new snippetets/\n//   const handleCreateSnippet = async () => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/snippets/\",\n//         newSnippet\n//       );\n//       setSnippets([...snippets, response.data]);\n//       setNewSnippet({\n//         title: \"\",\n//         code: \"\",\n//         description: \"\",\n//         language: \"\",\n//         tags: [],\n//       }); // reset form\n//     } catch (error) {\n//       console.error(\"Error creating snippet:\", error);\n//     }\n//   };\n\n//   // Handle delete snippet\n//   const handleDeleteSnippet = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8000/api/snippets/${id}/`);\n//       setSnippets(snippets.filter((snippet) => snippet.id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting snippet:\", error);\n//     }\n//   };\n\n//   // Handle update snippet\n//   const handleUpdateSnippet = async (id, updatedSnippet) => {\n//     try {\n//       const response = await axios.put(\n//         `http://localhost:8000/api/snippets/${id}/`,\n//         updatedSnippet\n//       );\n//       setSnippets(\n//         snippets.map((snippet) => (snippet.id === id ? response.data : snippet))\n//       );\n//     } catch (error) {\n//       console.error(\"Error updating snippet:\", error);\n//     }\n//   };\n\n//   // Handle tag generation (connected to the backend logic)\n//   const handleTagGeneration = async (snippetCode) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8000/api/generate-tags/\",\n//         { code: snippetCode }\n//       );\n//       setNewSnippet((prevState) => ({ ...prevState, tags: response.data }));\n//     } catch (error) {\n//       console.error(\"Error generating tags:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className='snippet-list-page'>\n//       <h1>Code Snippets</h1>\n\n//       <div className='new-snippet-form'>\n//         <textarea\n//           value={newSnippet.code}\n//           onChange={(e) =>\n//             setNewSnippet({ ...newSnippet, code: e.target.value })\n//           }\n//           placeholder='Enter your code here'\n//         />\n//         <input\n//           type='text'\n//           value={newSnippet.description}\n//           onChange={(e) =>\n//             setNewSnippet({ ...newSnippet, description: e.target.value })\n//           }\n//           placeholder='Enter description'\n//         />\n//         <input\n//           type='text'\n//           value={newSnippet.title}\n//           onChange={(e) =>\n//             setNewSnippet({ ...newSnippet, title: e.target.value })\n//           }\n//           placeholder='Enter title'\n//         />\n//         <input\n//           type='text'\n//           value={newSnippet.language}\n//           onChange={(e) =>\n//             setNewSnippet({ ...newSnippet, language: e.target.value })\n//           }\n//           placeholder='Enter language'\n//         />\n//         <button onClick={() => handleTagGeneration(newSnippet.code)}>\n//           Generate Tags\n//         </button>\n//         <button onClick={handleCreateSnippet}>Add Snippet</button>\n//       </div>\n\n//       <table className='snippet-table'>\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Description</th>\n//             <th>Code</th>\n//             <th>Language</th>\n//             <th>Tags</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {snippets.map((snippet) => (\n//             <tr key={snippet.id}>\n//               <td>{snippet.title}</td>\n//               <td>{snippet.description}</td>\n//               <td>{snippet.code}</td>\n//               <td>{snippet.language}</td>\n//               <td>{snippet.tags.join(\", \")}</td>\n//               <td>\n//                 <button\n//                   onClick={() =>\n//                     handleUpdateSnippet(snippet.id, {\n//                       title: snippet.title,\n//                       description: snippet.description,\n//                       code: snippet.code,\n//                       language: snippet.language,\n//                     })\n//                   }\n//                 >\n//                   Update\n//                 </button>\n//                 <button onClick={() => handleDeleteSnippet(snippet.id)}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default SnippetListPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchSnippets, createSnippet, updateSnippet, deleteSnippet } from \"./apiService\"; // Assuming existing functions\nimport \"../styles.css\"; // Optional styling file\n\nvar SnippetListPage = function SnippetListPage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    snippets = _useState2[0],\n    setSnippets = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1]; // Fetch snippets on component mount\n  useEffect(function () {\n    var getSnippets = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetchSnippets();\n            case 3:\n              data = _context.sent;\n              setSnippets(data);\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setError(_context.t0.message);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function getSnippets() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getSnippets();\n  }, []);\n  var handleAddSnippet = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var newSnippet, addedSnippet;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            newSnippet = {\n              title: \"New Snippet\",\n              description: 'Javascript snippet',\n              code: 'console.log(\"Hello World!\");',\n              language: \"javascript\"\n            };\n            _context2.prev = 1;\n            _context2.next = 4;\n            return createSnippet(newSnippet);\n          case 4:\n            addedSnippet = _context2.sent;\n            setSnippets([].concat(_toConsumableArray(snippets), [addedSnippet]));\n            _context2.next = 11;\n            break;\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(\"Error adding snippet:\", _context2.t0);\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n    return function handleAddSnippet() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleUpdateSnippet = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(snippetId) {\n      var updatedData, updatedSnippet;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            updatedData = {\n              title: \"Updated Snippet\",\n              description: \"Snippet Update\",\n              code: 'console.log(\"Updated Code!\")',\n              language: 'Javascript'\n            };\n            _context3.prev = 1;\n            _context3.next = 4;\n            return updateSnippet(snippetId, updatedData);\n          case 4:\n            updatedSnippet = _context3.sent;\n            setSnippets(snippets.map(function (snippet) {\n              return snippet.id === snippetId ? updatedSnippet : snippet;\n            }));\n            _context3.next = 11;\n            break;\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error(\"Error updating snippet:\", _context3.t0);\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n    return function handleUpdateSnippet(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleDeleteSnippet = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(snippetId) {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return deleteSnippet(snippetId);\n          case 3:\n            setSnippets(snippets.filter(function (snippet) {\n              return snippet.id !== snippetId;\n            }));\n            _context4.next = 9;\n            break;\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(\"Error deleting snippet:\", _context4.t0);\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 6]]);\n    }));\n    return function handleDeleteSnippet(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleGenerateTags = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(snippetId) {\n      var response, updatedSnippet;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return fetch(\"/api/snippets/\".concat(snippetId, \"/generate-tags/\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Basic \".concat(btoa(\"orban:orban\")) // Basic Auth\n              }\n            });\n          case 3:\n            response = _context5.sent;\n            if (response.ok) {\n              _context5.next = 6;\n              break;\n            }\n            throw new Error(\"Failed to generate tags: \".concat(response.statusText));\n          case 6:\n            _context5.next = 8;\n            return response.json();\n          case 8:\n            updatedSnippet = _context5.sent;\n            // Update snippet list with the newly generated tags\n            setSnippets(snippets.map(function (snippet) {\n              return snippet.id === snippetId ? updatedSnippet : snippet;\n            }));\n            _context5.next = 15;\n            break;\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(\"Error generating tags:\", _context5.t0);\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 12]]);\n    }));\n    return function handleGenerateTags(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, \"Snippet List\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"Error: \", error), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleAddSnippet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, \"Add Snippet\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Language\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, snippets.map(function (snippet) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: snippet.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, snippet.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, snippet.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, snippet.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, snippet.language), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, snippet.code)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, snippet.tags ? snippet.tags.join(\", \") : \"No tags\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: true,\n      onClick: function onClick() {\n        return handleUpdateSnippet(snippet.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleDeleteSnippet(snippet.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleGenerateTags(snippet.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \"Generate Tags\")));\n  }))));\n};\nexport default SnippetListPage;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","useEffect","useState","fetchSnippets","createSnippet","updateSnippet","deleteSnippet","SnippetListPage","_useState","_useState2","_slicedToArray","snippets","setSnippets","_useState3","_useState4","error","setError","getSnippets","_ref","_asyncToGenerator","_callee","data","_callee$","_context","t0","message","apply","arguments","handleAddSnippet","_ref2","_callee2","newSnippet","addedSnippet","_callee2$","_context2","title","description","code","language","concat","_toConsumableArray","console","handleUpdateSnippet","_ref3","_callee3","snippetId","updatedData","updatedSnippet","_callee3$","_context3","map","snippet","id","_x","handleDeleteSnippet","_ref4","_callee4","_callee4$","_context4","filter","_x2","handleGenerateTags","_ref5","_callee5","response","_callee5$","_context5","fetch","headers","Authorization","btoa","ok","statusText","json","_x3","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","onClick","border","key","tags","join","class"],"sources":["C:/Users/JamesOrban/Desktop/SmartCodeHub/Frontend/code-snippet-manager/src/components/SnippetList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"../Api\";\r\n// import axios from \"axios\";\r\n// import \"../styles.css\";\r\n\r\n// const SnippetListPage = () => {\r\n//   const [snippets, setSnippets] = useState([]);\r\n//   const [newSnippet, setNewSnippet] = useState({\r\n//     title: \"\",\r\n//     code: \"\",\r\n//     description: \"\",\r\n//     language: \"\",\r\n//     tags: [],\r\n//   });\r\n\r\n//   // Fetch all snippets from the backend\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:8000/api/snippets/\")\r\n//       .then((response) => setSnippets(response.data))\r\n//       .catch((error) => console.error(\"Error fetching snippets:\", error));\r\n//   }, []);\r\n\r\n//   // Handle create new snippetets/\r\n//   const handleCreateSnippet = async () => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8000/api/snippets/\",\r\n//         newSnippet\r\n//       );\r\n//       setSnippets([...snippets, response.data]);\r\n//       setNewSnippet({\r\n//         title: \"\",\r\n//         code: \"\",\r\n//         description: \"\",\r\n//         language: \"\",\r\n//         tags: [],\r\n//       }); // reset form\r\n//     } catch (error) {\r\n//       console.error(\"Error creating snippet:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle delete snippet\r\n//   const handleDeleteSnippet = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8000/api/snippets/${id}/`);\r\n//       setSnippets(snippets.filter((snippet) => snippet.id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting snippet:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle update snippet\r\n//   const handleUpdateSnippet = async (id, updatedSnippet) => {\r\n//     try {\r\n//       const response = await axios.put(\r\n//         `http://localhost:8000/api/snippets/${id}/`,\r\n//         updatedSnippet\r\n//       );\r\n//       setSnippets(\r\n//         snippets.map((snippet) => (snippet.id === id ? response.data : snippet))\r\n//       );\r\n//     } catch (error) {\r\n//       console.error(\"Error updating snippet:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle tag generation (connected to the backend logic)\r\n//   const handleTagGeneration = async (snippetCode) => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8000/api/generate-tags/\",\r\n//         { code: snippetCode }\r\n//       );\r\n//       setNewSnippet((prevState) => ({ ...prevState, tags: response.data }));\r\n//     } catch (error) {\r\n//       console.error(\"Error generating tags:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className='snippet-list-page'>\r\n//       <h1>Code Snippets</h1>\r\n\r\n//       <div className='new-snippet-form'>\r\n//         <textarea\r\n//           value={newSnippet.code}\r\n//           onChange={(e) =>\r\n//             setNewSnippet({ ...newSnippet, code: e.target.value })\r\n//           }\r\n//           placeholder='Enter your code here'\r\n//         />\r\n//         <input\r\n//           type='text'\r\n//           value={newSnippet.description}\r\n//           onChange={(e) =>\r\n//             setNewSnippet({ ...newSnippet, description: e.target.value })\r\n//           }\r\n//           placeholder='Enter description'\r\n//         />\r\n//         <input\r\n//           type='text'\r\n//           value={newSnippet.title}\r\n//           onChange={(e) =>\r\n//             setNewSnippet({ ...newSnippet, title: e.target.value })\r\n//           }\r\n//           placeholder='Enter title'\r\n//         />\r\n//         <input\r\n//           type='text'\r\n//           value={newSnippet.language}\r\n//           onChange={(e) =>\r\n//             setNewSnippet({ ...newSnippet, language: e.target.value })\r\n//           }\r\n//           placeholder='Enter language'\r\n//         />\r\n//         <button onClick={() => handleTagGeneration(newSnippet.code)}>\r\n//           Generate Tags\r\n//         </button>\r\n//         <button onClick={handleCreateSnippet}>Add Snippet</button>\r\n//       </div>\r\n\r\n//       <table className='snippet-table'>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Title</th>\r\n//             <th>Description</th>\r\n//             <th>Code</th>\r\n//             <th>Language</th>\r\n//             <th>Tags</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {snippets.map((snippet) => (\r\n//             <tr key={snippet.id}>\r\n//               <td>{snippet.title}</td>\r\n//               <td>{snippet.description}</td>\r\n//               <td>{snippet.code}</td>\r\n//               <td>{snippet.language}</td>\r\n//               <td>{snippet.tags.join(\", \")}</td>\r\n//               <td>\r\n//                 <button\r\n//                   onClick={() =>\r\n//                     handleUpdateSnippet(snippet.id, {\r\n//                       title: snippet.title,\r\n//                       description: snippet.description,\r\n//                       code: snippet.code,\r\n//                       language: snippet.language,\r\n//                     })\r\n//                   }\r\n//                 >\r\n//                   Update\r\n//                 </button>\r\n//                 <button onClick={() => handleDeleteSnippet(snippet.id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SnippetListPage;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchSnippets,\r\n  createSnippet,\r\n  updateSnippet,\r\n  deleteSnippet,\r\n} from \"./apiService\"; // Assuming existing functions\r\nimport \"../styles.css\"; // Optional styling file\r\n\r\nconst SnippetListPage = () => {\r\n  const [snippets, setSnippets] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch snippets on component mount\r\n  useEffect(() => {\r\n    const getSnippets = async () => {\r\n      try {\r\n        const data = await fetchSnippets();\r\n        setSnippets(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n    getSnippets();\r\n  }, []);\r\n\r\n  const handleAddSnippet = async () => {\r\n    const newSnippet = {\r\n      title: \"New Snippet\",\r\n      description: 'Javascript snippet',\r\n      code: 'console.log(\"Hello World!\");',\r\n      language: \"javascript\",\r\n    };\r\n    try {\r\n      const addedSnippet = await createSnippet(newSnippet);\r\n      setSnippets([...snippets, addedSnippet]);\r\n    } catch (err) {\r\n      console.error(\"Error adding snippet:\", err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateSnippet = async (snippetId) => {\r\n    const updatedData = {\r\n      title: \"Updated Snippet\",\r\n      description: \"Snippet Update\",\r\n      code: 'console.log(\"Updated Code!\")',\r\n      language:'Javascript'\r\n    };\r\n    try {\r\n      const updatedSnippet = await updateSnippet(snippetId, updatedData);\r\n      setSnippets(\r\n        snippets.map((snippet) =>\r\n          snippet.id === snippetId ? updatedSnippet : snippet\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating snippet:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSnippet = async (snippetId) => {\r\n    try {\r\n      await deleteSnippet(snippetId);\r\n      setSnippets(snippets.filter((snippet) => snippet.id !== snippetId));\r\n    } catch (err) {\r\n      console.error(\"Error deleting snippet:\", err);\r\n    }\r\n  };\r\n\r\n  const handleGenerateTags = async (snippetId) => {\r\n    try {\r\n      // Call backend API to generate tags for the given snippet ID\r\n      const response = await fetch(\r\n        `/api/snippets/${snippetId}/generate-tags/`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Basic ${btoa(\"orban:orban\")}`, // Basic Auth\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to generate tags: ${response.statusText}`);\r\n      }\r\n\r\n      const updatedSnippet = await response.json();\r\n      // Update snippet list with the newly generated tags\r\n      setSnippets(\r\n        snippets.map((snippet) =>\r\n          snippet.id === snippetId ? updatedSnippet : snippet\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error generating tags:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Snippet List</h1>\r\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\r\n      <button className='btn btn-primary' onClick={handleAddSnippet}>\r\n        Add Snippet\r\n      </button>\r\n      <table border='1'>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Code</th>\r\n            <th>Language</th>\r\n            <th>Tags</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {snippets.map((snippet) => (\r\n            <tr key={snippet.id}>\r\n              <td>{snippet.id}</td>\r\n              <td>{snippet.title}</td>\r\n              <td>{snippet.description}</td>\r\n              <td>{snippet.language}</td>\r\n              <td>\r\n                <pre>{snippet.code}</pre>\r\n              </td>\r\n              <td>{snippet.tags ? snippet.tags.join(\", \") : \"No tags\"}</td>\r\n              <td>\r\n                <button class onClick={() => handleUpdateSnippet(snippet.id)}>\r\n                  Update\r\n                </button>\r\n                <button onClick={() => handleDeleteSnippet(snippet.id)}>\r\n                  Delete\r\n                </button>\r\n                <button onClick={() => handleGenerateTags(snippet.id)}>\r\n                  Generate Tags\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnippetListPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}