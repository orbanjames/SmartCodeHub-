{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { generateTags, createSnippet } from \"../Api\";\n// import '../App.css'\n\n// function AddSnippet() {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [code, setCode] = useState(\"\");\n//   const [tags, setTags] = useState([]);\n\n//   const handleTagGeneration = () => {\n//     generateTags(code).then((response) => setTags(response.data.tags));\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const snippetData = { title, description, code, tags };\n//     createSnippet(snippetData).then(() => {\n//       setTitle(\"\");\n//       setDescription(\"\");\n//       setCode(\"\");\n//       setTags([]);\n//     });\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type='text'\n//         placeholder='Title'\n//         value={title}\n//         onChange={(e) => setTitle(e.target.value)}\n//         required\n//       />\n//       <textarea\n//         placeholder='Description'\n//         value={description}\n//         onChange={(e) => setDescription(e.target.value)}\n//         required\n//       ></textarea>\n//       <textarea\n//         placeholder='Code'\n//         value={code}\n//         onChange={(e) => setCode(e.target.value)}\n//         required\n//       ></textarea>\n//       <button type='button' onClick={handleTagGeneration}>\n//         Generate Tags\n//       </button>\n//       <div>\n//         {tags.map((tag, index) => (\n//           <span key={index} className='tag'>\n//             {tag}\n//           </span>\n//         ))}\n//       </div>\n//       <button type='submit'>Add Snippet</button>\n//     </form>\n//   );\n// }\n\n// export default AddSnippet;","map":{"version":3,"names":[],"sources":["C:/Users/JamesOrban/Desktop/SmartCodeHub/Frontend/code-snippet-manager/src/components/AddSnippet.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { generateTags, createSnippet } from \"../Api\";\r\n// import '../App.css'\r\n\r\n// function AddSnippet() {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [code, setCode] = useState(\"\");\r\n//   const [tags, setTags] = useState([]);\r\n\r\n//   const handleTagGeneration = () => {\r\n//     generateTags(code).then((response) => setTags(response.data.tags));\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const snippetData = { title, description, code, tags };\r\n//     createSnippet(snippetData).then(() => {\r\n//       setTitle(\"\");\r\n//       setDescription(\"\");\r\n//       setCode(\"\");\r\n//       setTags([]);\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input\r\n//         type='text'\r\n//         placeholder='Title'\r\n//         value={title}\r\n//         onChange={(e) => setTitle(e.target.value)}\r\n//         required\r\n//       />\r\n//       <textarea\r\n//         placeholder='Description'\r\n//         value={description}\r\n//         onChange={(e) => setDescription(e.target.value)}\r\n//         required\r\n//       ></textarea>\r\n//       <textarea\r\n//         placeholder='Code'\r\n//         value={code}\r\n//         onChange={(e) => setCode(e.target.value)}\r\n//         required\r\n//       ></textarea>\r\n//       <button type='button' onClick={handleTagGeneration}>\r\n//         Generate Tags\r\n//       </button>\r\n//       <div>\r\n//         {tags.map((tag, index) => (\r\n//           <span key={index} className='tag'>\r\n//             {tag}\r\n//           </span>\r\n//         ))}\r\n//       </div>\r\n//       <button type='submit'>Add Snippet</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default AddSnippet;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}