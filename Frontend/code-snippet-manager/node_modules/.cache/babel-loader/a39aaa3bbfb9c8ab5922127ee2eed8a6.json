{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JamesOrban\\\\Desktop\\\\SmartCodeHub\\\\Frontend\\\\code-snippet-manager\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport { trackStream } from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport { progressEventReducer, progressEventDecorator, asyncDecorator } from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\nvar isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nvar isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nvar encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? function (encoder) {\n  return function (str) {\n    return encoder.encode(str);\n  };\n}(new TextEncoder()) : (/*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(str) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = Uint8Array;\n          _context.next = 3;\n          return new Response(str).arrayBuffer();\n        case 3:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", new _context.t0(_context.t1));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}()));\nvar test = function test(fn) {\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return !!fn.apply(void 0, args);\n  } catch (e) {\n    return false;\n  }\n};\nvar supportsRequestStream = isReadableStreamSupported && test(function () {\n  var duplexAccessed = false;\n  var hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    }\n  }).headers.has('Content-Type');\n  return duplexAccessed && !hasContentType;\n});\nvar DEFAULT_CHUNK_SIZE = 64 * 1024;\nvar supportsResponseStream = isReadableStreamSupported && test(function () {\n  return utils.isReadableStream(new Response('').body);\n});\nvar resolvers = {\n  stream: supportsResponseStream && function (res) {\n    return res.body;\n  }\n};\nisFetchSupported && function (res) {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(function (type) {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? function (res) {\n      return res[type]();\n    } : function (_, config) {\n      throw new AxiosError(\"Response type '\".concat(type, \"' is not supported\"), AxiosError.ERR_NOT_SUPPORT, config);\n    });\n  });\n}(new Response());\nvar getBodyLength = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(body) {\n    var _request;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(body == null)) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\", 0);\n        case 2:\n          if (!utils.isBlob(body)) {\n            _context2.next = 4;\n            break;\n          }\n          return _context2.abrupt(\"return\", body.size);\n        case 4:\n          if (!utils.isSpecCompliantForm(body)) {\n            _context2.next = 9;\n            break;\n          }\n          _request = new Request(platform.origin, {\n            method: 'POST',\n            body: body\n          });\n          _context2.next = 8;\n          return _request.arrayBuffer();\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent.byteLength);\n        case 9:\n          if (!(utils.isArrayBufferView(body) || utils.isArrayBuffer(body))) {\n            _context2.next = 11;\n            break;\n          }\n          return _context2.abrupt(\"return\", body.byteLength);\n        case 11:\n          if (utils.isURLSearchParams(body)) {\n            body = body + '';\n          }\n          if (!utils.isString(body)) {\n            _context2.next = 16;\n            break;\n          }\n          _context2.next = 15;\n          return encodeText(body);\n        case 15:\n          return _context2.abrupt(\"return\", _context2.sent.byteLength);\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function getBodyLength(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar resolveBodyLength = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(headers, body) {\n    var length;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          length = utils.toFiniteNumber(headers.getContentLength());\n          return _context3.abrupt(\"return\", length == null ? getBodyLength(body) : length);\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function resolveBodyLength(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default isFetchSupported && (/*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(config) {\n    var _resolveConfig, url, method, data, signal, cancelToken, timeout, onDownloadProgress, onUploadProgress, responseType, headers, _resolveConfig$withCr, withCredentials, fetchOptions, composedSignal, request, unsubscribe, requestContentLength, _request, contentTypeHeader, _progressEventDecorat, _progressEventDecorat2, onProgress, flush, isCredentialsSupported, response, isStreamResponse, options, responseContentLength, _ref5, _ref6, _onProgress, _flush, responseData;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _resolveConfig = resolveConfig(config), url = _resolveConfig.url, method = _resolveConfig.method, data = _resolveConfig.data, signal = _resolveConfig.signal, cancelToken = _resolveConfig.cancelToken, timeout = _resolveConfig.timeout, onDownloadProgress = _resolveConfig.onDownloadProgress, onUploadProgress = _resolveConfig.onUploadProgress, responseType = _resolveConfig.responseType, headers = _resolveConfig.headers, _resolveConfig$withCr = _resolveConfig.withCredentials, withCredentials = _resolveConfig$withCr === void 0 ? 'same-origin' : _resolveConfig$withCr, fetchOptions = _resolveConfig.fetchOptions;\n          responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n          composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n          unsubscribe = composedSignal && composedSignal.unsubscribe && function () {\n            composedSignal.unsubscribe();\n          };\n          _context4.prev = 4;\n          _context4.t0 = onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head';\n          if (!_context4.t0) {\n            _context4.next = 11;\n            break;\n          }\n          _context4.next = 9;\n          return resolveBodyLength(headers, data);\n        case 9:\n          _context4.t1 = requestContentLength = _context4.sent;\n          _context4.t0 = _context4.t1 !== 0;\n        case 11:\n          if (!_context4.t0) {\n            _context4.next = 15;\n            break;\n          }\n          _request = new Request(url, {\n            method: 'POST',\n            body: data,\n            duplex: \"half\"\n          });\n          if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n            headers.setContentType(contentTypeHeader);\n          }\n          if (_request.body) {\n            _progressEventDecorat = progressEventDecorator(requestContentLength, progressEventReducer(asyncDecorator(onUploadProgress))), _progressEventDecorat2 = _slicedToArray(_progressEventDecorat, 2), onProgress = _progressEventDecorat2[0], flush = _progressEventDecorat2[1];\n            data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n          }\n        case 15:\n          if (!utils.isString(withCredentials)) {\n            withCredentials = withCredentials ? 'include' : 'omit';\n          }\n\n          // Cloudflare Workers throws when credentials are defined\n          // see https://github.com/cloudflare/workerd/issues/902\n          isCredentialsSupported = \"credentials\" in Request.prototype;\n          request = new Request(url, _objectSpread({}, fetchOptions, {\n            signal: composedSignal,\n            method: method.toUpperCase(),\n            headers: headers.normalize().toJSON(),\n            body: data,\n            duplex: \"half\",\n            credentials: isCredentialsSupported ? withCredentials : undefined\n          }));\n          _context4.next = 20;\n          return fetch(request);\n        case 20:\n          response = _context4.sent;\n          isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n          if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {\n            options = {};\n            ['status', 'statusText', 'headers'].forEach(function (prop) {\n              options[prop] = response[prop];\n            });\n            responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n            _ref5 = onDownloadProgress && progressEventDecorator(responseContentLength, progressEventReducer(asyncDecorator(onDownloadProgress), true)) || [], _ref6 = _slicedToArray(_ref5, 2), _onProgress = _ref6[0], _flush = _ref6[1];\n            response = new Response(trackStream(response.body, DEFAULT_CHUNK_SIZE, _onProgress, function () {\n              _flush && _flush();\n              unsubscribe && unsubscribe();\n            }), options);\n          }\n          responseType = responseType || 'text';\n          _context4.next = 26;\n          return resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n        case 26:\n          responseData = _context4.sent;\n          !isStreamResponse && unsubscribe && unsubscribe();\n          _context4.next = 30;\n          return new Promise(function (resolve, reject) {\n            settle(resolve, reject, {\n              data: responseData,\n              headers: AxiosHeaders.from(response.headers),\n              status: response.status,\n              statusText: response.statusText,\n              config: config,\n              request: request\n            });\n          });\n        case 30:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 33:\n          _context4.prev = 33;\n          _context4.t2 = _context4[\"catch\"](4);\n          unsubscribe && unsubscribe();\n          if (!(_context4.t2 && _context4.t2.name === 'TypeError' && /fetch/i.test(_context4.t2.message))) {\n            _context4.next = 38;\n            break;\n          }\n          throw Object.assign(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request), {\n            cause: _context4.t2.cause || _context4.t2\n          });\n        case 38:\n          throw AxiosError.from(_context4.t2, _context4.t2 && _context4.t2.code, config, request);\n        case 39:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[4, 33]]);\n  }));\n  return function (_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}());","map":null,"metadata":{},"sourceType":"module"}