{"ast":null,"code":"/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  var timestamp = 0;\n  var threshold = 1000 / freq;\n  var lastArgs;\n  var timer;\n  var invoke = function invoke(args) {\n    var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n  var throttled = function throttled() {\n    var now = Date.now();\n    var passed = now - timestamp;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(function () {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n  var flush = function flush() {\n    return lastArgs && invoke(lastArgs);\n  };\n  return [throttled, flush];\n}\nexport default throttle;","map":null,"metadata":{},"sourceType":"module"}